import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp
from matplotlib.gridspec import GridSpec
import warnings
warnings.filterwarnings('ignore')
plt.style.use('ggplot')

# For reproducibility
np.random.seed(42)

# Model parameters (from Sejnowski 2008, p.2-3)
# Class 2 model with b_w = -13 mV
E_Na = 50.0      # mV
E_K = -100.0     # mV
E_leak = -70.0   # mV
g_fast = 20.0    # mS/cm²
g_slow = 20.0    # mS/cm²
g_leak = 2.0     # mS/cm²
phi_w = 0.15     # Dimensionless
C = 2.0          # µF/cm²
b_m = -1.2       # mV
c_m = 18.0       # mV
b_w = -13.0      # mV (Class 2 model)
c_w = 10.0       # mV

# Activation functions
def m_inf(V):
    """Steady state activation of fast current"""
    return 0.5 * (1 + np.tanh((V - b_m) / c_m))

def w_inf(V):
    """Steady state activation of slow current"""
    return 0.5 * (1 + np.tanh((V - b_w) / c_w))

def tau_w(V):
    """Time constant for slow current activation"""
    return 1 / np.cosh((V - b_w) / (2 * c_w))

print(f"Class-2 Model Parameters:")
print(f"E_Na = {E_Na} mV, E_K = {E_K} mV, E_leak = {E_leak} mV")
print(f"g_fast = {g_fast} mS/cm², g_slow = {g_slow} mS/cm², g_leak = {g_leak} mS/cm²")
print(f"φ_w = {phi_w}, C = {C} µF/cm²")
print(f"b_m = {b_m} mV, c_m = {c_m} mV, b_w = {b_w} mV, c_w = {c_w} mV")
